---
import { Image } from 'astro:assets';

// Define Types
interface Props{
  title?: string;
   media?: { 
    image?: imageItem[]; 
    imgposition?: string; 
  };
  items?: textItem[];
}

interface textItem {
  title?: string;
  text?: string;
}

interface imageItem {
  id?: string;
  altText?: string;
  sourceUrl?: string;
}

// Define vars
const {title, media, items} = Astro.props;
const imgObject = media?.image ? Object.values(media.image) as imageItem[] : [];

const imageUrl = imgObject.length > 0 ? imgObject[0]?.sourceUrl : "";
const imageAlt = imgObject.length > 0 ? imgObject[0]?.altText : "";
const imagePosition = media?.imgposition;
---

<div class="grid grid-cols-1 full">
<h1 class="title">{title}</h1>
<div class="grid textgrid__content lg:grid-cols-2">

    {imageUrl && (
      <Image 
          src={imageUrl}
          width="10";
          height="10";
          widths={[540, 960, 1440, 1920]}
          sizes={`(max-width: 360px) 540px, (max-width: 720px) 960px, (max-width: 1600px) 1440px, 1920px`}
          format='webp'
          alt={imageAlt || ""} 
          title={imageAlt || ""}
          class={`image__wrap img_align_${imagePosition}`}
        />
      )}
 
  <div class="grid gap-4 items lg:grid-cols-2">
    {items &&
      items.map((item:any) => (
        <div class="item">
          <div class="item__title" set:html={item.text.title} />
          <div class="item__text" set:html={item.text.text} />
        </div>
      ))    
    }
  </div>
</div>
</div>

<style>

  .title {
    font-size: var(--fs-6);
    line-height: 112.5%;
    margin-bottom: var(--space-xl);
  }

  .textgrid__content {
    gap: var(--gap);
  }
  



  .item__title, .item__text {
    font-size:var(--fs-0);
    font-weight: 600;
    line-height: 112.5%;
    letter-spacing: -0.0025em;
  }


  .item__text {
    opacity: 0.6;
  }

  .img_align_right{
    order:1;
  }
  .img_align_left{
    order:0;
  }


  img {
    max-width: 100%;
  }


</style>