---
// Import Components
import { Image, getImage } from 'astro:assets';

// import Image from 'astro/components/Image.astro'
import TagGroup from '../components/TagGroup.astro'
import {slugify} from '../lib/utils.js';

// Type Definitions
type Services = {
  title: string
}

type ProjectProps = {
  clientname?: string
  title?: string
  imgsrc?: string
  imgalt?: string
  vidsrc?: string
  link?: string
  size?: string
  services?: Services[]
  fitCards?: boolean
}

// Defaults
const { clientname, title, imgsrc, imgalt = '', vidsrc, link, size, services, fitCards } = Astro.props as ProjectProps
let cardclasses = ''

if (fitCards !== true) {
  if (size) {
    switch (size) {
      case 'small':
        cardclasses = 'lg:col-span-4'
        break
      case 'large':
        cardclasses = 'lg:col-span-8'
        break
      case 'full':
        cardclasses = 'lg:col-span-12'
        break
      default:
        cardclasses = 'lg:col-span-6'
    }
  }
} else {
  cardclasses = 'lg:col-span-2'
}

const serviceTitles = services?.map(service => slugify(service.title)).join(' ') || '';


const theImage:any = imgsrc? await getImage({
    src: imgsrc, 
    inferSize: true, 
    widths: [540, 960, 1440, 1920],
    sizes: "(max-width: 360px) 540px, (max-width: 720px) 960px, (max-width: 1600px) 1440px, 1920px",
    alt: imgalt || "",
    title: title || "",
    format: 'webp'
  }) : "";
---

<div class={`project-card ${cardclasses}`} data-services={serviceTitles}>
  <div class="overflow-hidden rounded-md project-media">
    {
      vidsrc ? ( // if vidsrc is set, show video with poster image
        <div class="w-full project-video">
          <video
            preload="metadata"
            tabindex="-1"
            disablepictureinpicture
            playsinline
            loop
            title={title}
            src={vidsrc}
            poster={theImage.src}
            autoplay={true}
            muted
          />
        </div>
      ) : (
        imgsrc && ( // if no video, show image
          <div class="project-image">
            <Image 
              src={imgsrc}
              inferSize
              widths={[540, 960, 1440, 1920]}
              sizes={`(max-width: 360px) 540px, (max-width: 720px) 960px, (max-width: 1600px) 1440px, 1920px`}
              format='avif'
              alt={imgalt || ""}
              title={title || ""}
              class="min-w-full"
            />
          </div>
        )
      )
    }
  </div>

  <div class="project-content">
    <div class="flex justify-between pt-6 mb-0 align-middle project-meta">
      {clientname && <h3 class="font-medium project-client self-baseline opacity-80">{clientname}</h3>}
      {services && <TagGroup tags={services} />}
    </div>

    {
      title && (
        <h2 class="font-bold leading-4 project-title">
          <a href={link} class="project-link">
            {title}
          </a>
        </h2>
      )
    }
  </div>

  <style is:global>

    .project-card {    
      position: relative;
      
      color: var(--font-color);
      transition: transform 0.4s var(--easing-easeOutExpo);
    }

    .project-client {
      font-size: var(--fs--1);
      line-height: 112.5%;
    }

    .project-title {
      font-size: var(--fs-1);
      letter-spacing: -0.0125em;
      line-height: 100%;
      margin:0;
      padding:0;
    }

    img,
    video {
      width: 100%;
    }

    .project-title {
      /* text-edge: cap alphabetic; */
    }
  </style>
</div>
