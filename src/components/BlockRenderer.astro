---
// import type { ContentField } from '../types/contentblocks'
// Import Content Block Components
import TextBlock from './blocks/TextBlock.astro'
import TextGrid from './blocks/TextGrid.astro'
import ImageBlock from './blocks/ImageBlock.astro'
import VideoBlock from './blocks/VideoBlock.astro'
import ColorBlock from './blocks/ColorBlock.astro'
import TestimonialBlock from './blocks/TestimonialBlock.astro'
import MultiCols from './blocks/MultiCols.astro'
import EmbedBlock from './blocks/EmbedBlock.astro'
import TeamBlock from './blocks/TeamBlock.astro'


type Props = {
  prefix: string;
  blocks: any;
}

const { prefix, blocks } = Astro.props;
---
<div class="content">
  {blocks &&
    blocks.map((block:any) => {
      switch (block.__typename) {
        case `${prefix}ContentTextLayout`: // Text Block
          return <TextBlock content={block.text?.text || ''} size={block.text?.size} />
        case `${prefix}ContentImageLayout`: // Image block
          return <ImageBlock 
                    sourceUrl={block.image?.node?.sourceUrl} 
                    altText={block.image?.node?.altText} 
                    titleText={block.image?.node?.title} 
                    size={block.size} />
        case `${prefix}ContentVideoLayout`: // Video Block
          if(block.option === "embed"){
            return <EmbedBlock code={block.embedCopy} size={block.size} />
          }else{
            return <VideoBlock type={block.option} url={block.embed} size={block.size}/>
          }
        case `${prefix}ContentColorModeLayout`: // Color Block
          return <ColorBlock />
        case `${prefix}ContentTestimonialLayout`: // Testimonial Block
          return <TestimonialBlock />
        case `${prefix}ContentMultiColsLayout`: // Testimonial Block
          return <MultiCols cols={block.col} />
        case `${prefix}ContentTextGridLayout`: // Textgrid
          return <TextGrid title={block.title} media={block.media} items={block.item} />
        case `${prefix}ContentTeamLayout`: // Textgrid
          return <TeamBlock title={block.title} members={block.team?.nodes} />
        default:
          null
      }
    })
  }
</div>


<style>

  .content { 
    display: grid;
    gap: var(--grid-gutter);
    grid-row-gap: var(--grid-gutter)
  
  }
</style>